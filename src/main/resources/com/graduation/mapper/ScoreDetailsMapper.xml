<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zucc.graduationdesign.dao.ScoreDetailsMapper">
  <resultMap id="BaseResultMap" type="com.zucc.graduationdesign.entity.ScoreDetails">
    <id column="identifier" jdbcType="INTEGER" property="identifier" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="add/reduce" jdbcType="INTEGER" property="addReduce" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="checkerid" jdbcType="INTEGER" property="checkerid" />
    <result column="registrarid" jdbcType="INTEGER" property="registrarid" />
    <result column="plead" jdbcType="INTEGER" property="plead" />
    <result column="checkerid2" jdbcType="INTEGER" property="checkerid2" />
    <result column="approvalid" jdbcType="INTEGER" property="approvalid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    identifier, userid, add/reduce, score, checkerid, registrarid, plead, checkerid2, 
    approvalid
  </sql>
  <select id="selectByExample" parameterType="com.zucc.graduationdesign.entity.entity.ScoreDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gd_score_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gd_score_details
    where identifier = #{identifier,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gd_score_details
    where identifier = #{identifier,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zucc.graduationdesign.entity.entity.ScoreDetailsExample">
    delete from gd_score_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zucc.graduationdesign.entity.ScoreDetails">
    insert into gd_score_details (identifier, userid, add/reduce, 
      score, checkerid, registrarid, 
      plead, checkerid2, approvalid
      )
    values (#{identifier,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{addReduce,jdbcType=INTEGER}, 
      #{score,jdbcType=DOUBLE}, #{checkerid,jdbcType=INTEGER}, #{registrarid,jdbcType=INTEGER}, 
      #{plead,jdbcType=INTEGER}, #{checkerid2,jdbcType=INTEGER}, #{approvalid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zucc.graduationdesign.entity.ScoreDetails">
    insert into gd_score_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="identifier != null">
        identifier,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="addReduce != null">
        add/reduce,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="checkerid != null">
        checkerid,
      </if>
      <if test="registrarid != null">
        registrarid,
      </if>
      <if test="plead != null">
        plead,
      </if>
      <if test="checkerid2 != null">
        checkerid2,
      </if>
      <if test="approvalid != null">
        approvalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="identifier != null">
        #{identifier,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="addReduce != null">
        #{addReduce,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="checkerid != null">
        #{checkerid,jdbcType=INTEGER},
      </if>
      <if test="registrarid != null">
        #{registrarid,jdbcType=INTEGER},
      </if>
      <if test="plead != null">
        #{plead,jdbcType=INTEGER},
      </if>
      <if test="checkerid2 != null">
        #{checkerid2,jdbcType=INTEGER},
      </if>
      <if test="approvalid != null">
        #{approvalid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zucc.graduationdesign.entity.entity.ScoreDetailsExample" resultType="java.lang.Long">
    select count(*) from gd_score_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gd_score_details
    <set>
      <if test="record.identifier != null">
        identifier = #{record.identifier,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.addReduce != null">
        add/reduce = #{record.addReduce,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.checkerid != null">
        checkerid = #{record.checkerid,jdbcType=INTEGER},
      </if>
      <if test="record.registrarid != null">
        registrarid = #{record.registrarid,jdbcType=INTEGER},
      </if>
      <if test="record.plead != null">
        plead = #{record.plead,jdbcType=INTEGER},
      </if>
      <if test="record.checkerid2 != null">
        checkerid2 = #{record.checkerid2,jdbcType=INTEGER},
      </if>
      <if test="record.approvalid != null">
        approvalid = #{record.approvalid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gd_score_details
    set identifier = #{record.identifier,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      add/reduce = #{record.addReduce,jdbcType=INTEGER},
      score = #{record.score,jdbcType=DOUBLE},
      checkerid = #{record.checkerid,jdbcType=INTEGER},
      registrarid = #{record.registrarid,jdbcType=INTEGER},
      plead = #{record.plead,jdbcType=INTEGER},
      checkerid2 = #{record.checkerid2,jdbcType=INTEGER},
      approvalid = #{record.approvalid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zucc.graduationdesign.entity.ScoreDetails">
    update gd_score_details
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="addReduce != null">
        add/reduce = #{addReduce,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="checkerid != null">
        checkerid = #{checkerid,jdbcType=INTEGER},
      </if>
      <if test="registrarid != null">
        registrarid = #{registrarid,jdbcType=INTEGER},
      </if>
      <if test="plead != null">
        plead = #{plead,jdbcType=INTEGER},
      </if>
      <if test="checkerid2 != null">
        checkerid2 = #{checkerid2,jdbcType=INTEGER},
      </if>
      <if test="approvalid != null">
        approvalid = #{approvalid,jdbcType=INTEGER},
      </if>
    </set>
    where identifier = #{identifier,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zucc.graduationdesign.entity.ScoreDetails">
    update gd_score_details
    set userid = #{userid,jdbcType=INTEGER},
      add/reduce = #{addReduce,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE},
      checkerid = #{checkerid,jdbcType=INTEGER},
      registrarid = #{registrarid,jdbcType=INTEGER},
      plead = #{plead,jdbcType=INTEGER},
      checkerid2 = #{checkerid2,jdbcType=INTEGER},
      approvalid = #{approvalid,jdbcType=INTEGER}
    where identifier = #{identifier,jdbcType=INTEGER}
  </update>
</mapper>